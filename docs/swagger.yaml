definitions:
  models.PostTransacaoRequest:
    properties:
      descricao:
        type: string
      tipo:
        type: string
      valor:
        type: integer
    type: object
  models.PostTransacaoResponseBadRequest:
    properties:
      detail:
        example: Algum outro erro..
        type: string
    type: object
  models.PostTransacaoResponseNotFound:
    properties:
      detail:
        example: ID do cliente não existe
        type: string
    type: object
  models.PostTransacaoResponseSuccess:
    properties:
      limite:
        type: integer
      saldo:
        type: integer
    type: object
info:
  contact: {}
paths:
  /clientes/{id}/transacoes:
    post:
      description: Cadastra uma nova transação associada a um cliente pelo ID.
      operationId: cadastrar-transacao
      parameters:
      - description: ID do Cliente
        format: int64
        in: path
        name: id
        required: true
        type: integer
      - description: Detalhes da Transação
        in: body
        name: transacao
        required: true
        schema:
          $ref: '#/definitions/models.PostTransacaoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PostTransacaoResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.PostTransacaoResponseBadRequest'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.PostTransacaoResponseNotFound'
      summary: Cadastra uma transação
      tags:
      - Transacoes
swagger: "2.0"
